// Created: 2019/06/24 03:45:37
// JM last modified: 2020/06/03 13:35:35
//_ Called from the menu Short-Circuit > Ideal switch devices> List all
// 
//*What it does: Lists all Ideal switch devices at all levels
// Excluded will be shown when a device is excluded at any level
function SwitchData() {


   parseScriptFile('CheckDeviceExclusionAtAllLevels.dwj')

   // Move to top circuit
   var cct=currentCircuit()
   cct=cct.findByLocator('CC'); //*Move to top circuit

   SwitchConsole=SPRichConsole('Switches','Ideal Switch device info')
   SwitchConsole.clear
   var FoundDevices=false;

   parseScriptFile('sw0_m.dwj');
   var oDevice = null


   //+Find all ideal switch devices, 3 is HIER_SCOPE_DESIGN
   dev=cct.devices(512,-1, 3,'Part','Sw0');
   //----------------------------------------
   var data_switch = "Name,tA_Close,tA_Open,tA_margin,tB_Close,tB_Open,tB_margin,tC_Close,tC_Open,tC_margin, Excludes\n"


   if( dev.length > 0){

      FoundDevices=true;

      for(var ii=0;ii<dev.length;ii++){
         //*all instannces have the same data

         oDevice = new oDevice_sw0(dev[ii]);
         if( oDevice == null ){ continue }
         if(  oDevice.ExportedMask ) {
            continue //this device has an exported mask
         }
         
         //we always show the string for A, which always available, 1-phase or 3-phase
         ShowStringA=   +oDevice.tclose_A +oDevice.tclose_units+','
         +oDevice.topen_A  +oDevice.topen_units  +','
         +oDevice.Imargin_A+oDevice.Imargin_units;


         if(oDevice.phases==3){

            ShowStringB=   +oDevice.tclose_B +oDevice.tclose_units+','
            +oDevice.topen_B  +oDevice.topen_units  +','
            +oDevice.Imargin_B+oDevice.Imargin_units;

            ShowStringC=   +oDevice.tclose_C +oDevice.tclose_units+','
            +oDevice.topen_C  +oDevice.topen_units  +','
            +oDevice.Imargin_C+oDevice.Imargin_units;
            
            ShowString= ShowStringA+  ',' + ShowStringB+ ','+ ShowStringC;
         }else{
            ShowString= ShowStringA
         }

         //*Now do all instances
         allInstances=dev[ii].allInstances
         for(var jj=0;jj<allInstances.length;jj++){
            FullName=cct.design.getNameByLocator(allInstances[jj])
            ExcludedAtAnyLevel=CheckDeviceExclusionAtAllLevels(allInstances[jj])
            if( ExcludedAtAnyLevel){
               ExcludeString='Excluded'
            }else{
               ExcludeString='No Excluded'
            }
            data_switch+= FullName +","+ ShowString + "," +ExcludeString+",\n";
         }
      }
   }

   //TODO : avoid seeing metering device switches 

   //+Finish
   if( !FoundDevices){
      SwitchConsole.writeln('No Ideal switch device in this design!')
   }

   SwitchConsole.setFont("Arial Blue 14 white")
   SwitchConsole.writeln('El proceso a terminado')
   SwitchConsole.activate()



   return data_switch
   }
















/*
parseScriptFile('CheckDeviceExclusionAtAllLevels.dwj')
function SwitchData() {

   var FoundDevices=false;
   // Move to top circuit
   var cct=currentCircuit()
   cct=cct.findByLocator('CC'); //*Move to top circuit

   parseScriptFile('sw0_m.dwj');
   var oDevice = null

   //+Find all ideal switch devices, 3 is HIER_SCOPE_DESIGN
   var dev =cct.devices(512,-1, 3,'Part','Sw0');
   var data_switch = "Name,Excludes"
   if( dev.length > 0){
      FoundDevices=true;

      for (var i = 0; i < dev.length; i++) {
         var sw = dev[i];
         oDevice = new oDevice_sw0(sw);
         oDevice = new oDevice_sw0(dev[i]);
         if( oDevice == null ){ continue }
         if(  oDevice.ExportedMask ) {
            continue //this device has an exported mask
         }
         allInstances=dev[i].allInstance
      
         for(var jj=0;jj<allInstances.length;jj++){
            FullName=cct.design.getNameByLocator(allInstances[jj])
            ExcludedAtAnyLevel=CheckDeviceExclusionAtAllLevels(allInstances[jj])
            if( ExcludedAtAnyLevel){
               ExcludeString='Excluded'
            }else{
               ExcludeString=''
            }
            data_switch+= FullName +"," +ExcludeString+",\n";
         }

      }
   }

   //+Finish
   if( !FoundDevices){
      continue
   }
}
*/
